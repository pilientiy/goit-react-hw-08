import { GetPointForValue, IntervalCache, IntervalCacheLoadOptions } from "../../types.js";
export type PartialArray<Value> = Array<Value> & {
    __partial: true;
};
type ValuesArray<Value> = Array<Value> | PartialArray<Value>;
export declare function createIntervalCache<Point extends number | bigint, Params extends Array<any>, Value>(options: {
    debugLabel?: string;
    debugLogging?: boolean;
    getKey?: (...params: Params) => string;
    getPointForValue: GetPointForValue<Point, Value>;
    load: (start: Point, end: Point, ...params: [...Params, IntervalCacheLoadOptions<Value>]) => PromiseLike<ValuesArray<Value>> | ValuesArray<Value>;
}): IntervalCache<Point, Params, Value>;
export {};
