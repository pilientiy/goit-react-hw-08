import { Cache } from "../types.js";
type MutationCallback<Value> = () => Promise<Value>;
export type MutateAsync<Params extends Array<any>, Value> = (params: Params, callback: MutationCallback<Value>) => Promise<void>;
export type MutateSync<Params extends Array<any>, Value> = (params: Params, newValue: Value) => void;
export type MutationApi<Params extends Array<any>, Value> = {
    isPending: boolean;
    mutateAsync: MutateAsync<Params, Value>;
    mutateSync: MutateSync<Params, Value>;
};
export declare function useCacheMutation<Params extends Array<any>, Value>(cache: Cache<Params, Value>): MutationApi<Params, Value>;
export declare namespace useCacheMutation {
    var displayName: string;
}
export {};
